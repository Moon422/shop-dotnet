@model TableModel

<div id="@Model.Identifier" class="overflow-x-auto">
    <table class="table table-xs table-pin-rows table-pin-cols">
        <thead>
            <tr>
                @foreach (var column in Model.Columns)
                {
                    <td>@column.Title</td>
                }
            </tr>
        </thead>
        <tbody id="table-body"></tbody>
    </table>
</div>

<script asp-location="AspLocation.Footer">
    $(function () {
        search_@(Model.Identifier)()
    });

    function search_@(Model.Identifier)() {
        // var columns = [@foreach (var column in Model.Columns) { <text>['@column.PropertyName', @column.Renderer.Render(Model.Identifier)],</text> }];
        var columnRenderer = [
            @foreach (var columnModel in Model.Columns)
            {
                <text>{
                    propertyName: '@columnModel.PropertyName',
                    rendererCallback: @columnModel.Renderer.Render(Model.Identifier),
                    classNames: '@columnModel.ClassNames'
                },</text>
            }
        ]
        var tableBody = $('#@(@Model.Identifier) #table-body');

        var postData = {};
        addCsrfToken(postData);
        toggleLoader();

        $.ajax({
            url: '@(Url.Action("List", "Customer"))',
            type: 'POST',
            data: postData,
            success: function (response) {
                var tempTblBody = $('<tbody>', {
                    id: 'table-body'
                })
                $.each(response, function (rowIdx) {
                    var rowData = response[rowIdx];
                    var tr = $('<tr>');
                    $.each(columnRenderer, function (colIdx) {
                        var td = $('<td>', {
                            html: columnRenderer[colIdx].rendererCallback(rowData, columnRenderer[colIdx].propertyName, rowIdx, colIdx),
                            class: columnRenderer[colIdx].classNames
                        });
                        tr.append(td);
                    });
                    tempTblBody.append(tr);
                });
                tableBody.replaceWith(tempTblBody);
            },
            error: function (xhr, status, error) {

            },
            complete: function (xhr, status) {
                toggleLoader();
            }
        });
    }

    function renderText_@(Model.Identifier)(rowData, propertyName, rowIdx, colIdx) {
        return "<div>" + rowData[propertyName] + "</div>";
    }

    @* @foreach (var column in Model.Columns)
    {
        <text>@column.Renderer.Render(Model.Identifier)</text>
    } *@
</script>