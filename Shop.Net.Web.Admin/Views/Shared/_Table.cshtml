@model TableModel

<div id="@Model.Identifier" class="overflow-x-auto">
    <table class="table table-xs table-pin-rows table-pin-cols">
        <thead>
            <tr>
                @foreach (var column in Model.Columns)
                {
                    <td>@column.Title</td>
                }
            </tr>
        </thead>
        <tbody id="table-body"></tbody>
    </table>
    <div class="flex justify-between">
        <div>
            <select class="select select-bordered w-full max-w-xs" id="table-page-size" asp-items="@Model.AvailablePageSizes">
            </select>
        </div>
        <div class="join" id="table-page">
            @* <button class="join-item btn">1</button> *@
            @* <button class="join-item btn btn-active">2</button> *@
            @* <button class="join-item btn">3</button> *@
            @* <button class="join-item btn">4</button> *@
        </div>
    </div>
</div>

<script asp-location="AspLocation.Footer">
    $(function () {
        search_@(Model.Identifier)(1);

        $("#table-page-size").on("change", search_@(Model.Identifier))
    });

    function search_@(Model.Identifier)(pageIndex) {
        var pageSize = $("#table-page-size").val();

        var columnRenderer = [
            @foreach (var columnModel in Model.Columns)
            {
                <text>{
                    propertyName: '@columnModel.PropertyName',
                    rendererCallback: @columnModel.Renderer.Render(Model.Identifier),
                    classNames: '@columnModel.ClassNames'
                },</text>
            }
        ];

        var tableBody = $('#@(@Model.Identifier) #table-body');
        var tablePage = $('#table-page');

        var postData = {
            'PageIndex': pageIndex,
            'PageSize': pageSize
        };
        
        addCsrfToken(postData);
        toggleLoader();

        $.ajax({
            url: '@Model.ReadUrl',
            type: 'POST',
            data: postData,
            success: function (response) {
                console.log(response);

                var tempTblBody = $('<tbody>', {
                    id: 'table-body'
                })
                $.each(response.Data, function (rowIdx) {
                    var rowData = response.Data[rowIdx];
                    var tr = $('<tr>');
                    $.each(columnRenderer, function (colIdx) {
                        var td = $('<td>', {
                            html: columnRenderer[colIdx].rendererCallback(rowData, columnRenderer[colIdx].propertyName, rowIdx, colIdx),
                            class: columnRenderer[colIdx].classNames
                        });
                        tr.append(td);
                    });
                    tempTblBody.append(tr);
                });
                tableBody.replaceWith(tempTblBody);

                var pageSelectorTemp = $('<div>', {
                    id: 'table-page',
                    class: 'join'
                });
                
                var pageElement = $('<button>', {
                    class: 'join-item btn',
                    text: '«'
                });
                pageSelectorTemp.append(pageElement);

                if (response.NumberOfPages > 1) {
                    

                    for (var i = 0; i < response.NumberOfPages; i++) {
                        pageElement = $('<button>', {
                            class: 'join-item btn',
                            text: i + 1
                        });

                        if (i === response.PageIndex) {
                            console.log("I am here");
                            pageElement.addClass('btn-active');
                        }

                        pageSelectorTemp.append(pageElement);
                    }

                    
                }
                
                var pageElement = $('<button>', {
                    class: 'join-item btn',
                    text: '»'
                });
                pageSelectorTemp.append(pageElement);

                tablePage.replaceWith(pageSelectorTemp);
            },
            error: function (xhr, status, error) {

            },
            complete: function (xhr, status) {
                toggleLoader();
            }
        });
    }

    function renderText_@(Model.Identifier)(rowData, propertyName, rowIdx, colIdx) {
        return "<div>" + rowData[propertyName] + "</div>";
    }
</script>