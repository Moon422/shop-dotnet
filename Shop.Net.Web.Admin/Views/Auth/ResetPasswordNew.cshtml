@model PasswordModel

@{
    Layout = "_AuthLayout";
}

@if (ViewData.ModelState.TryGetValue(ErrorKeys.GlobalViewErrorKey, out var message))
{
    <p class="text-red-500">@message.Errors.First().ErrorMessage</p>
}
else
{
    <div class="w-50 mx-auto" style="margin-top: 5rem;">
    <form asp-controller="Auth" asp-action="ResetPasswordNew" asp-route-otp="@Context.Request.Query["otp"]" class="mb-3"
        method="post">
        @* @Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@
        <input type="hidden" asp-for="CustomerId">
        <div class="form-control">
            <label asp-for="Password" class="input input-bordered flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor"
                    class="h-4 w-4 opacity-70">
                    <path fill-rule="evenodd"
                        d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
                        clip-rule="evenodd" />
                </svg>
                <input asp-for="Password" class="grow" />
            </label>
        </div>
        <button class="btn btn-primary w-100" type="submit">Reset</button>
    </form>
    <p>Create an account. <a href="@(Url.Action("Register", "Profile"))">Register</a></p>
</div>
}